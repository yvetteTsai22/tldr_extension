{"version":3,"file":"main.js","mappings":"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","sources":["webpack://tldr-reader/./src/content/main.js"],"sourcesContent":["// Debug logging\nfunction debugLog(message, data = null) {\n    const timestamp = new Date().toISOString();\n    const logMessage = data ? `${timestamp} - ${message}: ${JSON.stringify(data)}` : `${timestamp} - ${message}`;\n    console.log(logMessage);\n}\n\ndebugLog('Content script loaded');\n\n// Extract article content\nfunction extractContent() {\n    debugLog('Extracting content');\n    // Try to find the main article element\n    const article = document.querySelector('article') || \n                   document.querySelector('[role=\"article\"]') || \n                   document.querySelector('.article') || \n                   document.querySelector('.post') || \n                   document.querySelector('.content');\n    \n    if (!article) {\n        debugLog('No article found, using body text');\n        return document.body.innerText;\n    }\n    \n    debugLog('Article found, processing content');\n    // Clone the article to avoid modifying the original\n    const articleClone = article.cloneNode(true);\n    \n    // Remove unwanted elements\n    articleClone.querySelectorAll('script, style, nav, footer, header, aside, .comments, .sidebar').forEach(el => el.remove());\n    \n    return articleClone.innerText.trim();\n}\n\n// Initialize content script\nfunction initialize() {\n    debugLog('Initializing content script');\n    const content = extractContent();\n    \n    // Send content for analysis\n    chrome.runtime.sendMessage({\n        type: 'ANALYZE_CONTENT',\n        content: content\n    });\n\n    // Add highlight styles\n    const style = document.createElement('style');\n    style.textContent = `\n        .tldr-highlight {\n            background-color: #fff3cd;\n            cursor: pointer;\n            border-bottom: 1px dotted #ffc107;\n        }\n        .tldr-highlight:hover {\n            background-color: #ffe69c;\n        }\n    `;\n    document.head.appendChild(style);\n\n    // Highlight key phrases\n    function highlightKeyPhrases() {\n        debugLog('Highlighting key phrases');\n        const keyPhrases = new Set([\n            'important', 'key', 'significant', 'major', 'critical',\n            'essential', 'crucial', 'vital', 'fundamental', 'primary'\n        ]);\n\n        // Function to process text nodes\n        function processTextNode(node) {\n            const text = node.textContent;\n            const words = text.split(/\\s+/);\n            let hasHighlight = false;\n\n            words.forEach(word => {\n                if (keyPhrases.has(word.toLowerCase())) {\n                    hasHighlight = true;\n                }\n            });\n\n            if (hasHighlight) {\n                const span = document.createElement('span');\n                span.innerHTML = text.replace(\n                    new RegExp(`\\\\b(${Array.from(keyPhrases).join('|')})\\\\b`, 'gi'),\n                    '<span class=\"tldr-highlight\" title=\"Click for definition\">$1</span>'\n                );\n                node.parentNode.replaceChild(span, node);\n            }\n        }\n\n        // Walk through all text nodes in the document\n        const walker = document.createTreeWalker(\n            document.body,\n            NodeFilter.SHOW_TEXT,\n            null,\n            false\n        );\n\n        let node;\n        while (node = walker.nextNode()) {\n            processTextNode(node);\n        }\n    }\n\n    highlightKeyPhrases();\n}\n\n// Listen for messages from the side panel\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    debugLog('Received message', message);\n    if (message.type === 'GET_CONTENT') {\n        const content = extractContent();\n        debugLog('Sending content response');\n        sendResponse({ content: content });\n    }\n});\n\n// Initialize when the page is loaded\nif (document.readyState === 'complete') {\n    debugLog('Document already loaded, initializing');\n    initialize();\n} else {\n    debugLog('Waiting for document load');\n    window.addEventListener('load', initialize);\n} "],"names":["debugLog","message","data","arguments","length","undefined","timestamp","Date","toISOString","logMessage","concat","JSON","stringify","console","log","extractContent","article","document","querySelector","body","innerText","articleClone","cloneNode","querySelectorAll","forEach","el","remove","trim","initialize","content","chrome","runtime","sendMessage","type","style","createElement","textContent","head","appendChild","highlightKeyPhrases","keyPhrases","Set","processTextNode","node","text","words","split","hasHighlight","word","has","toLowerCase","span","innerHTML","replace","RegExp","Array","from","join","parentNode","replaceChild","walker","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","onMessage","addListener","sender","sendResponse","readyState","window","addEventListener"],"sourceRoot":""}